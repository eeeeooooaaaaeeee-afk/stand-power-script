-- LocalScript –≤ StarterPlayerScripts

local Players = game:GetService('Players')
local UserInputService = game:GetService('UserInputService')
local RunService = game:GetService('RunService')
local VirtualInputManager = game:GetService('VirtualInputManager')
local TweenService = game:GetService('TweenService')
local Lighting = game:GetService('Lighting')

local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- –ó–∞–≥—Ä—É–∑–∫–∞ Rayfield UI Library
local success, Rayfield = pcall(function()
    return loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
end)

if not success then
    warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å Rayfield UI')
    return
end

-- –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
local Window = Rayfield:CreateWindow({
    Name = 'üç¨ Candy Farmer',
    LoadingTitle = 'Candy Farmer',
    LoadingSubtitle = 'by Scripting',
    ConfigurationSaving = {
        Enabled = true,
        FolderName = 'CandyFarmer',
        FileName = 'Config',
    },
    Discord = {
        Enabled = false,
        Invite = 'noinvitelink',
        RememberJoins = true,
    },
    KeySystem = false,
})

-- –¢–∞–±—ã
local MainTab = Window:CreateTab('–û—Å–Ω–æ–≤–Ω–æ–µ')
local FarmTab = Window:CreateTab('–ê–≤—Ç–æ-–§–∞—Ä–º')
local SettingsTab = Window:CreateTab('–ù–∞—Å—Ç—Ä–æ–π–∫–∏')
local DebugTab = Window:CreateTab('Debug')

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
local currentObject = nil
local farmObjects = {}
local currentFarmIndex = 1
local autoFarmEnabled = false
local farmDelay = 1
local interactDuration = 0.7
local espEnabled = false
local espHandles = {}
local walkSpeed = 16
local fullBrightEnabled = false
local originalBrightness = Lighting.Brightness
local originalAmbient = Lighting.Ambient
local originalOutdoorAmbient = Lighting.OutdoorAmbient
local noclipEnabled = false
local platform = nil
local originalCollide = {}

-- –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏ –ø—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏
local SAFE_POSITION = Vector3.new(5, 4, -1)

-- –°–ø–∏—Å–æ–∫ –≤–∞–ª–∏–¥–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è —Ñ–∞—Ä–º–∞
local validObjects = {
    'Candy',
    'Candy Basket',
}

-- –§—É–Ω–∫—Ü–∏—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏ –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
local function teleportToSafePosition()
    local character = player.Character
    if not character then
        return false
    end

    local humanoidRootPart = character:FindFirstChild('HumanoidRootPart')
    if not humanoidRootPart then
        return false
    end

    -- –¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º—Å—è –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
    humanoidRootPart.CFrame = CFrame.new(SAFE_POSITION)
    return true
end

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
local function createPlatform(position)
    if platform then
        platform:Destroy()
    end

    platform = Instance.new('Part')
    platform.Name = 'FarmPlatform'
    platform.Size = Vector3.new(10, 1, 10)
    platform.Anchored = true
    platform.CanCollide = true
    platform.Material = Enum.Material.Plastic
    platform.Transparency = 0.8
    platform.BrickColor = BrickColor.new('Bright green')
    platform.Parent = workspace

    if position then
        platform.Position = position - Vector3.new(0, 4, 0)
    end
end

-- –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
local function removePlatform()
    if platform then
        platform:Destroy()
        platform = nil
    end
end

-- –§—É–Ω–∫—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∏—è noclip
local function enableNoclip()
    if noclipEnabled then
        return
    end

    local character = player.Character
    if not character then
        return
    end

    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è CanCollide
    originalCollide = {}

    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA('BasePart') then
            originalCollide[part] = part.CanCollide
            part.CanCollide = false
        end
    end

    noclipEnabled = true
end

-- –§—É–Ω–∫—Ü–∏—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è noclip
local function disableNoclip()
    if not noclipEnabled then
        return
    end

    local character = player.Character
    if not character then
        return
    end

    -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è CanCollide
    for part, canCollide in pairs(originalCollide) do
        if part and part.Parent then
            part.CanCollide = canCollide
        end
    end

    originalCollide = {}
    noclipEnabled = false
end

-- –§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
local function updateWalkSpeed()
    local character = player.Character
    if character then
        local humanoid = character:FindFirstChildOfClass('Humanoid')
        if humanoid then
            humanoid.WalkSpeed = walkSpeed
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è FullBright
local function toggleFullBright(enabled)
    fullBrightEnabled = enabled
    if enabled then
        Lighting.Brightness = 2
        Lighting.Ambient = Color3.new(1, 1, 1)
        Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
        Lighting.GlobalShadows = false
    else
        Lighting.Brightness = originalBrightness
        Lighting.Ambient = originalAmbient
        Lighting.OutdoorAmbient = originalOutdoorAmbient
        Lighting.GlobalShadows = true
    end
end

-- ESP Functions
local function createESP(object)
    if not object or not object.Parent then
        return
    end

    local highlight = Instance.new('Highlight')
    highlight.Name = 'CandyESP'
    highlight.FillColor = Color3.fromRGB(255, 215, 0)
    highlight.OutlineColor = Color3.fromRGB(255, 165, 0)
    highlight.FillTransparency = 0.3
    highlight.OutlineTransparency = 0
    highlight.Parent = object

    espHandles[object] = highlight
end

local function removeESP(object)
    if espHandles[object] then
        espHandles[object]:Destroy()
        espHandles[object] = nil
    end
end

local function updateESP()
    for object, highlight in pairs(espHandles) do
        if not object or not object.Parent then
            highlight:Destroy()
            espHandles[object] = nil
        end
    end

    if not espEnabled then
        return
    end

    for _, object in ipairs(farmObjects) do
        if object and object.Parent and not espHandles[object] then
            createESP(object)
        end
    end
end

local function toggleESP(enabled)
    espEnabled = enabled
    if not enabled then
        for object, highlight in pairs(espHandles) do
            highlight:Destroy()
        end
        espHandles = {}
    else
        updateESP()
    end
end

-- –£–õ–£–ß–®–ï–ù–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∞
local function isValidObject(obj)
    if not obj then
        return false
    end

    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ–±—ä–µ–∫—Ç –Ω–µ NPC –∏ –Ω–µ –∏–≥—Ä–æ–∫
    if obj:FindFirstAncestorOfClass('Model') then
        local model = obj:FindFirstAncestorOfClass('Model')
        if model then
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ Humanoid (NPC/–∏–≥—Ä–æ–∫–∏)
            if model:FindFirstChild('Humanoid') then
                return false
            end
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ Head (–∏–≥—Ä–æ–∫–∏)
            if model:FindFirstChild('Head') then
                return false
            end
        end
    end

    -- –£–õ–£–ß–®–ï–ù–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å—é –∏–µ—Ä–∞—Ä—Ö–∏—é –æ–±—ä–µ–∫—Ç–∞
    local function checkHierarchy(instance)
        if not instance then
            return false
        end

        local instanceName = instance.Name:lower()

        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º—è —Ç–µ–∫—É—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞
        for _, validName in ipairs(validObjects) do
            if instanceName:find(validName:lower(), 1, true) then
                return true
            end
        end

        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª–µ–π
        local parent = instance.Parent
        while parent and parent ~= game do
            local parentName = parent.Name:lower()
            for _, validName in ipairs(validObjects) do
                if parentName:find(validName:lower(), 1, true) then
                    return true
                end
            end
            parent = parent.Parent
        end

        return false
    end

    return checkHierarchy(obj)
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –í–°–ï–• –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
local function findObjectsAtPosition(position, radius)
    local foundObjects = {}
    local radiusSquared = radius * radius

    local function searchInInstance(instance)
        if instance:IsA('BasePart') then
            local distance = (instance.Position - position).Magnitude
            if distance <= radius then
                table.insert(foundObjects, instance)
            end
        end

        for _, child in ipairs(instance:GetChildren()) do
            searchInInstance(child)
        end
    end

    searchInInstance(game.Workspace)
    return foundObjects
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ Handle –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è —Ñ–∞—Ä–º–∞ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
local function findHandleObjects()
    local foundObjects = {}
    local checkedPositions = {} -- –î–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è

    local function searchForHandles(instance)
        if instance:IsA('BasePart') and instance.Name == 'Handle' then
            if isValidObject(instance) then
                -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã —É–∂–µ –≤ —ç—Ç–æ–π –ø–æ–∑–∏—Ü–∏–∏
                local positionKey = math.floor(instance.Position.X)
                    .. '_'
                    .. math.floor(instance.Position.Y)
                    .. '_'
                    .. math.floor(instance.Position.Z)

                if not checkedPositions[positionKey] then
                    checkedPositions[positionKey] = true
                    table.insert(foundObjects, instance)
                else
                    -- –ï—Å–ª–∏ –ø–æ–∑–∏—Ü–∏—è —É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞, –∏—â–µ–º –í–°–ï –æ–±—ä–µ–∫—Ç—ã –≤ —ç—Ç–æ–π –ø–æ–∑–∏—Ü–∏–∏ –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–µ
                    local objectsAtPosition =
                        findObjectsAtPosition(instance.Position, 5)
                    for _, obj in ipairs(objectsAtPosition) do
                        if obj.Name == 'Handle' and isValidObject(obj) then
                            local objPositionKey = math.floor(obj.Position.X)
                                .. '_'
                                .. math.floor(obj.Position.Y)
                                .. '_'
                                .. math.floor(obj.Position.Z)
                            if not checkedPositions[objPositionKey] then
                                checkedPositions[objPositionKey] = true
                                table.insert(foundObjects, obj)
                            end
                        end
                    end
                end
            end
        end

        for _, child in ipairs(instance:GetChildren()) do
            searchForHandles(child)
        end
    end

    searchForHandles(game.Workspace)
    return foundObjects
end

-- –§—É–Ω–∫—Ü–∏—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ (—Ç–æ–ª—å–∫–æ Handle)
local function quickUpdateObjects()
    local newObjects = findHandleObjects()

    -- –£–¥–∞–ª—è–µ–º –æ–±—ä–µ–∫—Ç—ã –∫–æ—Ç–æ—Ä—ã—Ö –±–æ–ª—å—à–µ –Ω–µ—Ç
    for i = #farmObjects, 1, -1 do
        local obj = farmObjects[i]
        if not obj or not obj.Parent then
            table.remove(farmObjects, i)
            removeESP(obj)
        end
    end

    -- –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã
    for _, newObj in ipairs(newObjects) do
        local exists = false
        for _, existingObj in ipairs(farmObjects) do
            if existingObj == newObj then
                exists = true
                break
            end
        end
        if not exists then
            table.insert(farmObjects, newObj)
            if espEnabled then
                createESP(newObj)
            end
        end
    end

    return #newObjects
end

-- –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏ –ü–û–î –æ–±—ä–µ–∫—Ç
local function teleportToObject(obj)
    if not obj then
        return false
    end

    local character = player.Character
    if not character then
        return false
    end

    local humanoidRootPart = character:FindFirstChild('HumanoidRootPart')
    if not humanoidRootPart then
        return false
    end

    local targetPosition

    -- –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –æ–±—ä–µ–∫—Ç–∞
    if obj:IsA('BasePart') then
        targetPosition = obj.Position
    elseif obj:IsA('Model') and obj.PrimaryPart then
        targetPosition = obj.PrimaryPart.Position
    else
        targetPosition = obj:GetPivot().Position
    end

    -- –¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º—Å—è –ü–û–î –æ–±—ä–µ–∫—Ç (–Ω–∞ 3 studs –Ω–∏–∂–µ)
    local teleportPosition = targetPosition - Vector3.new(0, 3, 0)
    humanoidRootPart.CFrame = CFrame.new(teleportPosition)

    -- –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –ø–æ–¥ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º
    createPlatform(teleportPosition)

    return true
end

-- –§—É–Ω–∫—Ü–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∞ - —Ç–æ–ª—å–∫–æ –∑–∞–∂–∞—Ç–∏–µ E
local function autoInteract()
    -- –ù–∞–∂–∏–º–∞–µ–º –∏ —É–¥–µ—Ä–∂–∏–≤–∞–µ–º E
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)

    -- –ñ–¥–µ–º —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
    wait(interactDuration)

    -- –û—Ç–ø—É—Å–∫–∞–µ–º E
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
end

-- –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ-—Ñ–∞—Ä–º–∞ —Å noclip –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π
local function startAutoFarm()
    autoFarmEnabled = true

    -- –í–∫–ª—é—á–∞–µ–º noclip –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    enableNoclip()

    spawn(function()
        while autoFarmEnabled do
            -- –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤
            quickUpdateObjects()

            if #farmObjects == 0 then
                if FarmStatusLabel then
                    FarmStatusLabel:Set(
                        '–°—Ç–∞—Ç—É—Å: –û–∂–∏–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤...'
                    )
                end
                wait(2)
                continue
            end

            if currentFarmIndex > #farmObjects then
                currentFarmIndex = 1
            end

            local targetObject = farmObjects[currentFarmIndex]

            if not targetObject or not targetObject.Parent then
                table.remove(farmObjects, currentFarmIndex)
                removeESP(targetObject)
                if #farmObjects == 0 then
                    if FarmStatusLabel then
                        FarmStatusLabel:Set(
                            '–°—Ç–∞—Ç—É—Å: –í—Å–µ –æ–±—ä–µ–∫—Ç—ã —Å–æ–±—Ä–∞–Ω—ã!'
                        )
                    end
                    wait(2)
                    continue
                end
                continue
            end

            -- –¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º—Å—è –ü–û–î –æ–±—ä–µ–∫—Ç
            local teleportSuccess = pcall(function()
                return teleportToObject(targetObject)
            end)

            if teleportSuccess then
                if FarmStatusLabel then
                    FarmStatusLabel:Set(
                        '–°—Ç–∞—Ç—É—Å: –§–∞—Ä–º–∏–º '
                            .. currentFarmIndex
                            .. '/'
                            .. #farmObjects
                    )
                end

                -- –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–æ–º
                wait(0.3)

                -- –í—ã–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç (–∑–∞–∂–∞—Ç–∏–µ E)
                autoInteract()

                -- –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –ø–æ—Å–ª–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∞
                wait(0.3)
            end

            currentFarmIndex = currentFarmIndex + 1
            wait(farmDelay)
        end

        -- –ü–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–∫–ª—é—á–∞–µ–º noclip, —É–¥–∞–ª—è–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
        disableNoclip()
        removePlatform()
        teleportToSafePosition()

        if FarmStatusLabel then
            FarmStatusLabel:Set('–°—Ç–∞—Ç—É—Å: –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
        end
        autoFarmEnabled = false
    end)

    return true
end

-- –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã UI
local InfoLabel = MainTab:CreateLabel(
    '–ù–∞–∂–º–∏—Ç–µ Shift + –õ–ö–ú –ø–æ –∫–æ–Ω—Ñ–µ—Ç–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏'
)

local ObjectInfoSection =
    MainTab:CreateSection('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—ä–µ–∫—Ç–µ')

local ObjectNameLabel = MainTab:CreateLabel('–û–±—ä–µ–∫—Ç: –ù–µ –≤—ã–±—Ä–∞–Ω')
local ObjectClassLabel = MainTab:CreateLabel('–ö–ª–∞—Å—Å: -')
local ObjectIdLabel = MainTab:CreateLabel('ID: -')
local ObjectFarmStatus = MainTab:CreateLabel('–°—Ç–∞—Ç—É—Å: -')

local ActionsSection = MainTab:CreateSection('–î–µ–π—Å—Ç–≤–∏—è')

local ScanAllCandiesButton = MainTab:CreateButton({
    Name = 'üîç –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ñ–µ—Ç—ã',
    Callback = function()
        local success, result = pcall(function()
            farmObjects = findHandleObjects()
            if espEnabled then
                updateESP()
            end
            Rayfield:Notify({
                Title = '–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
                Content = '–ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ñ–µ—Ç: ' .. #farmObjects,
                Duration = 3,
            })
        end)

        if not success then
            warn(
                '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏: '
                    .. tostring(result)
            )
            Rayfield:Notify({
                Title = '–û—à–∏–±–∫–∞',
                Content = '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
                Duration = 3,
            })
        end
    end,
})

local ScanSimilarButton = MainTab:CreateButton({
    Name = 'üîé –ù–∞–π—Ç–∏ –ø–æ—Ö–æ–∂–∏–µ –æ–±—ä–µ–∫—Ç—ã',
    Callback = function()
        if not currentObject then
            Rayfield:Notify({
                Title = '–û—à–∏–±–∫–∞',
                Content = '–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç',
                Duration = 2,
            })
            return
        end

        local success, result = pcall(function()
            farmObjects = findHandleObjects()
            if espEnabled then
                updateESP()
            end
            Rayfield:Notify({
                Title = '–ü–æ–∏—Å–∫',
                Content = '–ù–∞–π–¥–µ–Ω–æ Handle –æ–±—ä–µ–∫—Ç–æ–≤: '
                    .. #farmObjects,
                Duration = 3,
            })
        end)

        if not success then
            warn(
                '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ—Ö–æ–∂–∏—Ö: '
                    .. tostring(result)
            )
            Rayfield:Notify({
                Title = '–û—à–∏–±–∫–∞',
                Content = '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫',
                Duration = 3,
            })
        end
    end,
})

local TeleportToCurrentButton = MainTab:CreateButton({
    Name = 'üöÄ –¢–µ–ª–µ–ø–æ—Ä—Ç –∫ –æ–±—ä–µ–∫—Ç—É',
    Callback = function()
        if not currentObject then
            Rayfield:Notify({
                Title = '–û—à–∏–±–∫–∞',
                Content = '–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç',
                Duration = 2,
            })
            return
        end

        -- –í—Ä–µ–º–µ–Ω–Ω–æ –≤–∫–ª—é—á–∞–µ–º noclip –¥–ª—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
        enableNoclip()

        local success = pcall(function()
            return teleportToObject(currentObject)
        end)

        if success then
            wait(0.5)
            autoInteract()
            wait(0.5)
            -- –í—ã–∫–ª—é—á–∞–µ–º noclip –ø–æ—Å–ª–µ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏ –∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
            disableNoclip()
            removePlatform()
            teleportToSafePosition()
            Rayfield:Notify({
                Title = '–¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è',
                Content = '–£—Å–ø–µ—à–Ω–æ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∫ –æ–±—ä–µ–∫—Ç—É –∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω –Ω–∞ –±–∞–∑—É',
                Duration = 2,
            })
        else
            -- –í—ã–∫–ª—é—á–∞–µ–º noclip –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
            disableNoclip()
            removePlatform()
            teleportToSafePosition()
            Rayfield:Notify({
                Title = '–û—à–∏–±–∫–∞',
                Content = '–ù–µ —É–¥–∞–ª–æ—Å—å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è. –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –±–∞–∑—É.',
                Duration = 2,
            })
        end
    end,
})

-- Farm Tab —ç–ª–µ–º–µ–Ω—Ç—ã
local FarmInfo = FarmTab:CreateLabel(
    '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞—Ä–º –∫–æ–Ω—Ñ–µ—Ç (Handle objects only)'
)

local FarmStatusSection = FarmTab:CreateSection('–°—Ç–∞—Ç—É—Å —Ñ–∞—Ä–º–∞')

local FarmStatusLabel =
    FarmTab:CreateLabel('–°—Ç–∞—Ç—É—Å: –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')

local FarmControlsSection =
    FarmTab:CreateSection('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞—Ä–º–æ–º')

local AutoFarmToggle = FarmTab:CreateToggle({
    Name = 'üîÑ –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ-—Ñ–∞—Ä–º',
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            if FarmStatusLabel then
                FarmStatusLabel:Set('–°—Ç–∞—Ç—É—Å: –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...')
            end
            local success = pcall(function()
                return startAutoFarm()
            end)

            if success then
                Rayfield:Notify({
                    Title = '–ê–≤—Ç–æ-–§–∞—Ä–º',
                    Content = '–ê–≤—Ç–æ-—Ñ–∞—Ä–º –∑–∞–ø—É—â–µ–Ω! Noclip –≤–∫–ª—é—á–µ–Ω.',
                    Duration = 2,
                })
            else
                if AutoFarmToggle then
                    AutoFarmToggle:Set(false)
                end
                if FarmStatusLabel then
                    FarmStatusLabel:Set(
                        '–°—Ç–∞—Ç—É—Å: –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞'
                    )
                end
                -- –í—ã–∫–ª—é—á–∞–µ–º noclip –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
                disableNoclip()
                removePlatform()
                teleportToSafePosition()
                Rayfield:Notify({
                    Title = '–û—à–∏–±–∫–∞',
                    Content = '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ-—Ñ–∞—Ä–º. –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –±–∞–∑—É.',
                    Duration = 2,
                })
            end
        else
            autoFarmEnabled = false
            -- –í—ã–∫–ª—é—á–∞–µ–º noclip –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
            disableNoclip()
            removePlatform()
            teleportToSafePosition()
            if FarmStatusLabel then
                FarmStatusLabel:Set('–°—Ç–∞—Ç—É—Å: –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
            end
            Rayfield:Notify({
                Title = '–ê–≤—Ç–æ-–§–∞—Ä–º',
                Content = '–ê–≤—Ç–æ-—Ñ–∞—Ä–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. Noclip –≤—ã–∫–ª—é—á–µ–Ω. –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –±–∞–∑—É.',
                Duration = 2,
            })
        end
    end,
})

local FarmSettingsSection =
    FarmTab:CreateSection('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∞—Ä–º–∞')

local FarmDelaySlider = FarmTab:CreateSlider({
    Name = '‚è±Ô∏è –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ–±—ä–µ–∫—Ç–∞–º–∏ (—Å–µ–∫)',
    Range = { 0.5, 5 },
    Increment = 0.1,
    CurrentValue = 1,
    Callback = function(Value)
        farmDelay = Value
    end,
})

local InteractDurationSlider = FarmTab:CreateSlider({
    Name = '‚å®Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞–∂–∞—Ç–∏—è E (—Å–µ–∫)',
    Range = { 0.5, 2 },
    Increment = 0.1,
    CurrentValue = 0.7,
    Callback = function(Value)
        interactDuration = Value
    end,
})

-- Settings Tab —ç–ª–µ–º–µ–Ω—Ç—ã
local UISettingsSection =
    SettingsTab:CreateSection('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞')

local ToggleUIKeybind = SettingsTab:CreateKeybind({
    Name = '–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞',
    CurrentKeybind = 'RightControl',
    HoldToInteract = false,
    Callback = function(Keybind) end,
})

local PlayerSettingsSection =
    SettingsTab:CreateSection('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞')

local WalkSpeedSlider = SettingsTab:CreateSlider({
    Name = 'üèÉ‚Äç‚ôÇÔ∏è –°–∫–æ—Ä–æ—Å—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞',
    Range = { 16, 200 },
    Increment = 1,
    CurrentValue = 16,
    Callback = function(Value)
        walkSpeed = Value
        updateWalkSpeed()
    end,
})

local VisualSettingsSection =
    SettingsTab:CreateSection('–í–∏–∑—É–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏')

local ESPToggle = SettingsTab:CreateToggle({
    Name = 'üëÅÔ∏è –í–∫–ª—é—á–∏—Ç—å ESP –∫–æ–Ω—Ñ–µ—Ç',
    CurrentValue = false,
    Callback = function(Value)
        toggleESP(Value)
        Rayfield:Notify({
            Title = 'ESP',
            Content = Value and 'ESP –≤–∫–ª—é—á–µ–Ω' or 'ESP –≤—ã–∫–ª—é—á–µ–Ω',
            Duration = 2,
        })
    end,
})

local FullBrightToggle = SettingsTab:CreateToggle({
    Name = 'üí° –í–∫–ª—é—á–∏—Ç—å FullBright',
    CurrentValue = false,
    Callback = function(Value)
        toggleFullBright(Value)
        Rayfield:Notify({
            Title = 'FullBright',
            Content = Value and 'FullBright –≤–∫–ª—é—á–µ–Ω'
                or 'FullBright –≤—ã–∫–ª—é—á–µ–Ω',
            Duration = 2,
        })
    end,
})

local ObjectSettingsSection =
    SettingsTab:CreateSection('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—ä–µ–∫—Ç–æ–≤')

local ValidObjectsLabel = SettingsTab:CreateParagraph({
    Title = '–¢–µ–∫—É—â–∏–µ –∏–º–µ–Ω–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞',
    Content = table.concat(validObjects, ', '),
})

local AddObjectInput = SettingsTab:CreateInput({
    Name = '‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–º—è –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è —Ñ–∞—Ä–º–∞',
    PlaceholderText = '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –æ–±—ä–µ–∫—Ç–∞',
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        if Text and Text ~= '' then
            local alreadyExists = false
            for _, name in ipairs(validObjects) do
                if name:lower() == Text:lower() then
                    alreadyExists = true
                    break
                end
            end

            if not alreadyExists then
                table.insert(validObjects, Text)
                ValidObjectsLabel:Set({
                    Title = '–¢–µ–∫—É—â–∏–µ –∏–º–µ–Ω–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞',
                    Content = table.concat(validObjects, ', '),
                })
                Rayfield:Notify({
                    Title = '–£—Å–ø–µ—Ö',
                    Content = "–û–±—ä–µ–∫—Ç '"
                        .. Text
                        .. "' –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫",
                    Duration = 3,
                })
            else
                Rayfield:Notify({
                    Title = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                    Content = '–û–±—ä–µ–∫—Ç —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ',
                    Duration = 2,
                })
            end
        end
    end,
})

local RemoveObjectInput = SettingsTab:CreateInput({
    Name = '‚ûñ –£–¥–∞–ª–∏—Ç—å –∏–º—è –æ–±—ä–µ–∫—Ç–∞',
    PlaceholderText = '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è',
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        if Text and Text ~= '' then
            local foundIndex = nil
            for i, name in ipairs(validObjects) do
                if name:lower() == Text:lower() then
                    foundIndex = i
                    break
                end
            end

            if foundIndex then
                table.remove(validObjects, foundIndex)
                ValidObjectsLabel:Set({
                    Title = '–¢–µ–∫—É—â–∏–µ –∏–º–µ–Ω–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞',
                    Content = table.concat(validObjects, ', '),
                })
                Rayfield:Notify({
                    Title = '–£—Å–ø–µ—Ö',
                    Content = "–û–±—ä–µ–∫—Ç '"
                        .. Text
                        .. "' —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞",
                    Duration = 3,
                })
            else
                Rayfield:Notify({
                    Title = '–û—à–∏–±–∫–∞',
                    Content = '–û–±—ä–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ',
                    Duration = 2,
                })
            end
        end
    end,
})

-- Debug Tab —ç–ª–µ–º–µ–Ω—Ç—ã
local DebugInfoSection =
    DebugTab:CreateSection('–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')

local ObjectsCountParagraph = DebugTab:CreateParagraph({
    Title = 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤',
    Content = "–ù–∞–∂–º–∏—Ç–µ '–û–±–Ω–æ–≤–∏—Ç—å' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏",
})

local RefreshObjectsButton = DebugTab:CreateButton({
    Name = 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±—ä–µ–∫—Ç–æ–≤',
    Callback = function()
        local allObjects = findHandleObjects()
        local countByType = {}

        for _, obj in ipairs(allObjects) do
            -- –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ä–æ–¥–∏—Ç–µ–ª—è –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
            local parentName = obj.Parent and obj.Parent.Name or 'No Parent'
            countByType[parentName] = (countByType[parentName] or 0) + 1
        end

        local statsText = '–í—Å–µ–≥–æ Handle –æ–±—ä–µ–∫—Ç–æ–≤: '
            .. #allObjects
            .. '\n\n'

        for name, count in pairs(countByType) do
            statsText = statsText .. '‚Ä¢ ' .. name .. ': ' .. count .. '\n'
        end

        ObjectsCountParagraph:Set({
            Title = 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤ ('
                .. #allObjects
                .. ' –≤—Å–µ–≥–æ)',
            Content = statsText,
        })

        Rayfield:Notify({
            Title = 'Debug',
            Content = '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∞',
            Duration = 2,
        })
    end,
})

local SelectedObjectDebugSection =
    DebugTab:CreateSection('–í—ã–±—Ä–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç')

local SelectedObjectParagraph = DebugTab:CreateParagraph({
    Title = 'üéØ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—ä–µ–∫—Ç–µ',
    Content = "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ '–û–±–Ω–æ–≤–∏—Ç—å'",
})

local RefreshSelectedObjectButton = DebugTab:CreateButton({
    Name = 'üîç –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—ä–µ–∫—Ç–µ',
    Callback = function()
        if not currentObject then
            SelectedObjectParagraph:Set({
                Title = 'üéØ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—ä–µ–∫—Ç–µ',
                Content = '‚ùå –û–±—ä–µ–∫—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω',
            })
            return
        end

        local target = currentObject
        local debugInfo = 'üìù –û—Å–Ω–æ–≤–Ω–æ–µ:\n'
        debugInfo = debugInfo .. '‚Ä¢ –ò–º—è: ' .. target.Name .. '\n'
        debugInfo = debugInfo .. '‚Ä¢ –ö–ª–∞—Å—Å: ' .. target.ClassName .. '\n'
        debugInfo = debugInfo
            .. '‚Ä¢ ID: '
            .. tostring(target:GetDebugId())
            .. '\n'
        debugInfo = debugInfo
            .. '‚Ä¢ –ü—É—Ç—å: '
            .. target:GetFullName()
            .. '\n'
        debugInfo = debugInfo
            .. '‚Ä¢ –†–æ–¥–∏—Ç–µ–ª—å: '
            .. (target.Parent and target.Parent.Name or 'None')
            .. '\n\n'

        debugInfo = debugInfo .. 'üîß –°–≤–æ–π—Å—Ç–≤–∞:\n'
        pcall(function()
            for _, property in pairs({
                'Position',
                'Size',
                'Material',
                'Transparency',
                'CanCollide',
                'Anchored',
            }) do
                if target[property] ~= nil then
                    debugInfo = debugInfo
                        .. '‚Ä¢ '
                        .. property
                        .. ': '
                        .. tostring(target[property])
                        .. '\n'
                end
            end
        end)

        -- –°—Ç–∞—Ç—É—Å —Ñ–∞—Ä–º–∞
        local success, isValidValue = pcall(function()
            return isValidObject(target)
        end)
        local isValid = success and isValidValue

        debugInfo = debugInfo
            .. '\nüéØ –°—Ç–∞—Ç—É—Å —Ñ–∞—Ä–º–∞: '
            .. (
                isValid and '‚úÖ –í–ê–õ–ò–î–ù–´–ô' or '‚ùå –ù–ï–í–ê–õ–ò–î–ù–´–ô'
            )

        SelectedObjectParagraph:Set({
            Title = 'üéØ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: ' .. target.Name,
            Content = debugInfo,
        })
    end,
})

local SystemInfoSection =
    DebugTab:CreateSection('–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')

local SystemInfoParagraph = DebugTab:CreateParagraph({
    Title = 'üñ•Ô∏è –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
    Content = "–ù–∞–∂–º–∏—Ç–µ '–û–±–Ω–æ–≤–∏—Ç—å' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
})

local RefreshSystemInfoButton = DebugTab:CreateButton({
    Name = 'üíª –û–±–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é',
    Callback = function()
        local systemInfo = 'üéØ –û—Å–Ω–æ–≤–Ω–æ–µ:\n'
        systemInfo = systemInfo .. '‚Ä¢ –ò–≥—Ä–æ–∫: ' .. player.Name .. '\n'
        systemInfo = systemInfo
            .. '‚Ä¢ FPS: '
            .. tostring(math.floor(1 / RunService.RenderStepped:Wait()))
            .. '\n'
        systemInfo = systemInfo
            .. '‚Ä¢ –í—Ä–µ–º—è –∏–≥—Ä—ã: '
            .. tostring(
                math.floor(game:GetService('Workspace').DistributedGameTime)
            )
            .. '—Å\n\n'

        systemInfo = systemInfo .. 'üîß –§–∞—Ä–º:\n'
        systemInfo = systemInfo
            .. '‚Ä¢ –û–±—ä–µ–∫—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ: '
            .. #farmObjects
            .. '\n'
        systemInfo = systemInfo
            .. '‚Ä¢ –ê–≤—Ç–æ-—Ñ–∞—Ä–º: '
            .. (autoFarmEnabled and '‚úÖ –í–ö–õ' or '‚ùå –í–´–ö–õ')
            .. '\n'
        systemInfo = systemInfo
            .. '‚Ä¢ –¢–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å: '
            .. currentFarmIndex
            .. '\n'
        systemInfo = systemInfo
            .. '‚Ä¢ –ó–∞–¥–µ—Ä–∂–∫–∞: '
            .. farmDelay
            .. '—Å\n'
        systemInfo = systemInfo
            .. '‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å E: '
            .. interactDuration
            .. '—Å\n'
        systemInfo = systemInfo
            .. '‚Ä¢ Noclip: '
            .. (noclipEnabled and '‚úÖ –í–ö–õ' or '‚ùå –í–´–ö–õ')
            .. '\n'
        systemInfo = systemInfo
            .. '‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è: '
            .. tostring(SAFE_POSITION)
            .. '\n\n'

        systemInfo = systemInfo
            .. 'üëÅÔ∏è –í–∏–∑—É–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n'
        systemInfo = systemInfo
            .. '‚Ä¢ ESP: '
            .. (espEnabled and '‚úÖ –í–ö–õ' or '‚ùå –í–´–ö–õ')
            .. '\n'
        systemInfo = systemInfo
            .. '‚Ä¢ FullBright: '
            .. (fullBrightEnabled and '‚úÖ –í–ö–õ' or '‚ùå –í–´–ö–õ')
            .. '\n'
        systemInfo = systemInfo .. '‚Ä¢ –°–∫–æ—Ä–æ—Å—Ç—å: ' .. walkSpeed .. '\n'

        SystemInfoParagraph:Set({
            Title = 'üñ•Ô∏è –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
            Content = systemInfo,
        })
    end,
})

-- –£–ª—É—á—à–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
local function onObjectClick()
    if
        UserInputService:IsKeyDown(Enum.KeyCode.LeftShift)
        or UserInputService:IsKeyDown(Enum.KeyCode.RightShift)
    then
        local target = mouse.Target
        if target then
            currentObject = target

            ObjectNameLabel:Set('–û–±—ä–µ–∫—Ç: ' .. target.Name)
            ObjectClassLabel:Set('–ö–ª–∞—Å—Å: ' .. target.ClassName)
            ObjectIdLabel:Set('ID: ' .. tostring(target:GetDebugId()))

            -- –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∞
            local success, isValidValue = pcall(function()
                return isValidObject(target)
            end)
            local isValid = success and isValidValue

            ObjectFarmStatus:Set(
                '–°—Ç–∞—Ç—É—Å: '
                    .. (
                        isValid and '‚úÖ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ñ–∞—Ä–º–∞'
                        or '‚ùå –ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç'
                    )
            )

            Rayfield:Notify({
                Title = '–û–±—ä–µ–∫—Ç –≤—ã–±—Ä–∞–Ω',
                Content = target.Name
                    .. ' - '
                    .. (
                        isValid and '–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ñ–∞—Ä–º–∞'
                        or '–ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ñ–∞—Ä–º–∞'
                    ),
                Duration = 2,
            })
        end
    end
end

-- –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
mouse.Button1Down:Connect(onObjectClick)

-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
player.CharacterAdded:Connect(function(character)
    wait(1)
    updateWalkSpeed()
    -- –ü—Ä–∏–º–µ–Ω—è–µ–º noclip –∫ –Ω–æ–≤–æ–º—É –ø–µ—Ä—Å–æ–Ω–∞–∂—É –µ—Å–ª–∏ –∞–≤—Ç–æ—Ñ–∞—Ä–º –∞–∫—Ç–∏–≤–µ–Ω
    if autoFarmEnabled then
        wait(0.5)
        enableNoclip()
    end
end)

if player.Character then
    updateWalkSpeed()
end

-- –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ ESP
spawn(function()
    while true do
        if espEnabled then
            updateESP()
        end
        wait(5)
    end
end)

-- –§–æ–Ω–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤
spawn(function()
    while true do
        if autoFarmEnabled then
            quickUpdateObjects()
        end
        wait(10) -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
    end
end)

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
Rayfield:Notify({
    Title = 'üç¨ Candy Farmer –∑–∞–≥—Ä—É–∂–µ–Ω',
    Content = '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Shift + –õ–ö–ú –ø–æ –∫–æ–Ω—Ñ–µ—Ç–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã',
    Duration = 6,
})

print(
    'üç¨ Candy Farmer loaded! Use Shift + Click on candies to start farming.'
)
